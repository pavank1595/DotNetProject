trigger: none

pool:
  name: "windowspool"
  demands:
    - Agent.Name -equals windowsagent

variables:
  buildConfiguration: "Release"
  dotNetCodeLocation: "C:/dotnet_code"
  webServer: "72.145.8.167"  # Name or IP address of your web server
  deployPath: "C:/inetpub/app_v1.0"  # Path to the directory on your web server
  username: "devuser"
  password: "randomuser@123"

stages:
- stage: Build
  displayName: "Build Stage"
  jobs:
  - job: BuildJob
    displayName: "Build the project"
    steps:

    - task: CopyFiles@2
      displayName: "copy files from default location"
      inputs:
        SourceFolder: "C:/vsts-agent/_work/1/s"
        Contents: "**/*"
        TargetFolder: "C:/dotnet_code"

    - task: DotNetCoreCLI@2
      displayName: "Restore NuGet Packages"
      inputs:
        command: "restore"
        workingDirectory: "C:/dotnet_code"
        projects: "**/*.csproj"

    - task: DotNetCoreCLI@2
      displayName: "Building the project"
      inputs:
        command: "build"
        workingDirectory: "C:/dotnet_code"
        projects: "**/*.csproj"
        arguments: "--configuration $(buildConfiguration)"

- stage: Publish
  displayName: "Publish Stage"
  jobs:
  - job: PublishJob
    displayName: "Publish the project"
    steps:
    - task: DotNetCoreCLI@2
      displayName: "Publishing the project"
      inputs:
        command: "publish"
        workingDirectory: "C:/dotnet_code"
        projects: "**/*.csproj"
        arguments: "--configuration $(buildConfiguration) --output $(dotNetCodeLocation)/publish_package"
    
    - task: PublishBuildArtifacts@1
      displayName: "Publishing build artifacts"
      inputs:
        PathtoPublish: "$(dotNetCodeLocation)/publish_package"
        ArtifactName: "myArtifact"

- stage: Deploy
  displayName: "Deploy Stage"
  dependsOn: Publish
  jobs:
  - job: DeployJob
    displayName: "Deploy to Web Server"
    steps:
    - task: PowerShell@2
      displayName: "Copy files to remote server"
      inputs:
        targetType: "inline"
        script: |
          # Create a session using the username and password
          $username = "$(username)"
          $password = ConvertTo-SecureString "$(password)" -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential($username, $password)

          # Create the remote session
          $session = New-PSSession -ComputerName "$(webServer)" -Credential $credential
          
          # Copy the files
          Copy-Item -Path "$(dotNetCodeLocation)/publish_package/*.zip" -Destination "$(deployPath)" -ToSession $session
          Remove-PSSession $session
